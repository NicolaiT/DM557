package dk.sdu.imada.rsa;

import java.math.BigInteger;

public class Main {

    public static void main(String[] args) {
    	BigInteger[] results = NumberHelpers.extendedEuclideanAlgorithm(new BigInteger("123456544"), new BigInteger("9955487"));
    	for(BigInteger result : results) {
    		System.out.println(result);
    	}
        RSA rsa = new RSA(new BigInteger("1156561771779226504385211474703634660706188015894269578454843"),
                new BigInteger("1369432560389383877017373383790225389216006713827806996905907"),
                new BigInteger("47431565080882922701"));

        String encrypted = rsa.encryptMessage("what a lovely little coding exercise this is");
        System.out.println( "The encrypted message for 'what a lovely little coding exercise this is' is\n " + encrypted);

       RSA rsa2 = new RSA(new BigInteger("1156561771779226504385211474703634660706188015894269578454843"),
				new BigInteger ("1369432560389383877017373383790225389216006713827806996905907"),
				new BigInteger ("47431565080882922701"));

       String decrypted = rsa2.decrypt("163539282851503430713649281058826017605780033897423242881455432662877632018769478554353123812963594791485722281476322756" + "\n" +
"1403088031255559788723512901657758136170056090141319566727530852705583581269998099387206638350077870095092242176348918069" + "\n" + 
"160739623481607389014498189641816753489485837619050842354751944615037232215672505810744270521558551954216885911976767837" + "\n" + 
"1362288427881790052640868072591543768924759105448001010174526644364994995822154399865380639790114884117983728189070514561" + "\n" +
"906627797097826904369253078816059979692649219583221706955726703240165882975063108357575970281958002921696877657475176625" + "\n" +
"1370521590730394245054191956703148163654652507411227750317194825895537391417969895809268529695964616324077003096585236684" + "\n" +
"772614893989252917154634048744147735301791670782651126965222754352798794618140026965158355895963968925424327853022469097" + "\n" +
"792002950344722191817913285636286157041467873447177930399198278775574356394295166300182427379794453772463012030520124511" + "\n" +
"57495846212629609070693802219532188659957277245478731680688159787712298979944396175336094357823836882892806028162228941" + "\n" +
"1040685262590840101049494642084067503438563912789414012558788670307896343097681035008484536543138834311568478973226575746" + "\n" +
"373027859796576198248309859640432154037525939411862492279129495640839583762381801992328202520688569550384199396455679537" + "\n" +
"1037588909346988937458915062798696942157432829863519571000308443146335211615382768295429821260735178460732788678585288665" + "\n" +
"1112392055920577475788615568592667698992173284962034547515487345407013744750589177619165040894940481041228218080553164019" + "\n" +
"689569537429781615303046024463216063837759551563546328579723949756532970641465795305095185890426458231159030495376357412" + "\n" +
"984456805688371298158902771621473150863330165777863304891484348897932827709173775234151036713636728544566396278536323964" + "\n");
    	System.out.println("Decrypted message: " + decrypted);
    }
}
